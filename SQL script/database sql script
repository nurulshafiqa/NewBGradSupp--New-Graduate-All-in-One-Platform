-- Office Admin table
DROP TABLE OFFICE_ADMIN;

CREATE TABLE OFFICE_ADMIN
(
   OADMIN_ID             NUMBER(5,0)   NOT NULL,
   OADMIN_NAME           VARCHAR2(50)  NOT NULL,
   OADMIN_EMAIL          VARCHAR2(30),
   OADMIN_PHONE          VARCHAR2(12),

   CONSTRAINT OADMIN_PK PRIMARY KEY(OADMIN_ID)
);

-- Student table
DROP TABLE STUDENT;

CREATE TABLE STUDENT
(
   STUDENT_ID             NUMBER(5,0)   NOT NULL,
   STUDENT_NAME           VARCHAR2(50)  NOT NULL,
   STUDENT_BIRTHDATE      DATE,
   STUDENT_COUNTRY        VARCHAR2(15)  NOT NULL,
   STUDENT_EMAIL          VARCHAR2(30),
   STUDENT_PHONE          VARCHAR2(12),
   STUDENT_YEAR_ENROLLED  NUMBER(4,0)   NOT NULL,
   STUDENT_CGPA		        NUMBER(3,2),
   STUDENT_MAJOR          VARCHAR2(30),
   STUDENT_MINOR          VARCHAR2(30),
   STUDENT_WEAKNESS       VARCHAR(50),

   CONSTRAINT STUDENT_PK PRIMARY KEY(STUDENT_ID)
);

-- Student course table
DROP TABLE STUDENT_COURSE;

CREATE TABLE STUDENT_COURSE
(
   STUDENT_ID       NUMBER(5,0)   NOT NULL,
   COURSE_CODE      VARCHAR(6)    NOT NULL,
   COURSE_NAME      VARCHAR(50)   NOT NULL,
   COURSE_GRADE     VARCHAR2(2),

   CONSTRAINT STUDENT_COURSE_PK PRIMARY KEY (STUDENT_ID, COURSE_CODE),
   CONSTRAINT STUDENT_SC_FK FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID) ON DELETE    CASCADE,
   CONSTRAINT COURSE_SC_FK FOREIGN KEY (COURSE_CODE) REFERENCES COURSE (COURSE_CODE) ON DELETE    CASCADE
);

-- Company table
DROP TABLE COMPANY;

CREATE TABLE COMPANY
(
   COMPANY_ID             NUMBER(5,0)   NOT NULL,
   COMPANY_NAME			      VARCHAR(30)	  NOT NULL,
   COMPANY_EMAIL			    VARCHAR(30),
   COMPANY_PHONE			    VARCHAR(12),
   COMPANY_ADDRESS			    VARCHAR(50),
   COMPANY_INDUSTRY VARCHAR2(50),
   COMPANY_ADMIN_NAME 	         VARCHAR(30)     	  NOT NULL,
   COMPANY_ADMIN_EMAIL			    VARCHAR(30),
   
   CONSTRAINT COMPANY_ID_PK PRIMARY KEY(COMPANY_ID)
);

DROP TABLE JOB;

CREATE TABLE JOB
(
   JOB_ID             NUMBER(5,0)   NOT NULL,
   COMPANY_ID         NUMBER(5,0)   NOT NULL,
   JOB_CODE           CHAR(6),
   JOB_NAME           VARCHAR2(20),
   JOB_DESCRIPTION    VARCHAR2(50),
   JOB_INDUSTRY	      VARCHAR2(30),
   JOB_LOCATION       VARCHAR2(50),
   JOB_SALARY         NUMBER(6,0),
   CGPA_REQUIRED      NUMBER(3,2),
   COURSE_REQUIRED    VARCHAR2(50),

   CONSTRAINT JOB_PK PRIMARY KEY(JOB_ID),
   CONSTRAINT COMPANY_JOB_ID_UQ UNIQUE (COMPANY_ID, JOB_CODE),
   CONSTRAINT JOB_COMPANY_FK FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE    CASCADE
);

-- Job listing table
DROP TABLE JOB_LISTING;

CREATE TABLE JOB_LISTING
(
   JOB_ID             NUMBER(5,0)   NOT NULL,
   JOB_CODE           CHAR(6)       NOT NULL,
   JOB_NAME           VARCHAR(20)   NOT NULL,
   JOB_DESCRIPTION    VARCHAR(50),
   JOB_LOCATION       VARCHAR(50),
   JOB_SALARY         NUMBER(6,0),
   COMPANY_NAME       VARCHAR(30)   NOT NULL,
   COMPANY_ADDRESS    VARCHAR(50),
   COMPANY_EMAIL      VARCHAR(30),
   COMPANY_PHONE      VARCHAR(12),
   COURSE_REQUIRED    VARCHAR(50)   NOT NULL,
   CGPA_REQUIRED      NUMBER(3,2)   NOT NULL,

   CONSTRAINT JOB_LISTING_PK PRIMARY KEY(JOB_ID),
   CONSTRAINT JOB_LISTING_COMPANY_FK FOREIGN KEY (COMPANY_NAME)
      REFERENCES COMPANY(COMPANY_NAME),
   CONSTRAINT JOB_LISTING_JOB_FK FOREIGN KEY (JOB_CODE)
      REFERENCES JOB(JOB_CODE),
   CONSTRAINT JOB_LISTING_COURSE_REQUIRED_FK FOREIGN KEY (COURSE_REQUIRED)
      REFERENCES STUDENT_COURSE(COURSE_NAME)
);

-- Job application table
DROP TABLE JOB_APPLICATION;

CREATE TABLE JOB_APPLICATION (
  APPLY_ID               NUMBER(5,0)   NOT NULL,
  STUDENT_ID             NUMBER(5,0)   NOT NULL,
  COMPANY_ID             NUMBER(5,0)   NOT NULL,
  date_applied       DATE,
  STATUS                VARCHAR(50) DEFAULT 'pending',

  CONSTRAINT JOB_APP_PK PRIMARY KEY(APPLY_ID),
  CONSTRAINT JOB_APP_STUDENT_FK FOREIGN KEY (STUDENT_ID)
      REFERENCES STUDENT(STUDENT_ID),
  CONSTRAINT JOB_APP_COMPANY_FK FOREIGN KEY (COMPANY_ID)
      REFERENCES COMPANY(COMPANY_ID)
);

-- Favorite job table
DROP TABLE FAVORITE_JOB;

CREATE TABLE FAVORITE_JOB
(
   STUDENT_ID             NUMBER(5,0)   NOT NULL,
   JOB_ID                 NUMBER(5,0)   NOT NULL,
   
   CONSTRAINT FAV_JOB_PK PRIMARY KEY(STUDENT_ID, JOB_ID),
   CONSTRAINT FAV_JOB_STUDENT_FK FOREIGN KEY (STUDENT_ID)
      REFERENCES STUDENT(STUDENT_ID),
   CONSTRAINT FAV_JOB_JOB_FK FOREIGN KEY (JOB_ID)
      REFERENCES JOB(JOB_ID)
);

-- Salary Comparison table
DROP TABLE SALARY_COMPARISON;

CREATE TABLE SALARY_COMPARISON
(
   STUDENT_ID             NUMBER(5,0)   NOT NULL,
   JOB_CODE               CHAR(6)       NOT NULL,
   SALARY                 NUMBER(10,2)  NOT NULL,

   CONSTRAINT SALARY_COMP_PK PRIMARY KEY(STUDENT_ID, JOB_CODE),
   CONSTRAINT SALARY_STUDENT_FK FOREIGN KEY (STUDENT_ID)
      REFERENCES STUDENT(STUDENT_ID),
   CONSTRAINT SALARY_JOB_FK FOREIGN KEY (JOB_CODE)
      REFERENCES JOB(JOB_CODE)
);


-- Training table
DROP TABLE TRAINING;

CREATE TABLE TRAINING 
(
  TRAINING_ID 		NUMBER(5,0)   NOT NULL,
  TRAINING_NAME         VARCHAR2(255) NOT NULL,
  TRAINING_DESCRIPTION  VARCHAR2(1024),
  TRAINING_RATING    FLOAT,
  TRAINING_REVIEWS   VARCHAR(20),
  TRAINING_IMAGE varbinary(1024) NOT NULL,
  TRAINING_COMPANY varchar(50) NOT NULL,
  TRAINING_DURATIONS    VARCHAR2(50),
  
  CONSTRAINT TRAINING_PK PRIMARY KEY(TRAINING_ID)
);

-- Student training SUGGESTION table
DROP TABLE TRAINING_SUGGESTION;

CREATE TABLE TRAINING_SUGGESTION(
    TRAINING_ID 		NUMBER(5,0)   NOT NULL AUTO_INCREMENT,
    TRAINING_NAME         VARCHAR2(50) NOT NULL,
    TRAINING_DESCRIPTION  VARCHAR2(255),
    START_DATE		DATE NOT NULL,
    END_DATE      	DATE NOT NULL,
    TRAINING_DURATIONS    VARCHAR2(50),
    TRAINER_NAME		VARCHAR2(30) NOT NULL,
    TRAINING_MODE		VARCHAR2(20),
    TRAINING_URL VARCHAR(255),
    
    CONSTRAINT TRAINING_SUGGEST_PK PRIMARY KEY(TRAINING_ID),
    CONSTRAINT TRAINING_SUGGEST_FK FOREIGN KEY (TRAINING_NAME)
      REFERENCES TRAINING(TRAINING_NAME)
);
