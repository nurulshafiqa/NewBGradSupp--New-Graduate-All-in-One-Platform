-- This is sql script in order to create database in PhpMyAdmin

DROP TABLE OFFICE_ADMIN;
DROP TABLE STUDENT;
DROP TABLE STUDENT_COURSE;
DROP TABLE COMPANY;
DROP TABLE JOB;
DROP TABLE JOB_LISTING;
DROP TABLE JOB_APPLICATION;
DROP TABLE FAVORITE_JOB;
DROP TABLE SALARY_COMPARISON;
DROP TABLE TRAINING;
DROP TABLE TRAINING_SUGGESTION;

-- Office Admin table
CREATE TABLE OFFICE_ADMIN
(
   ADMIN_ID             INT NOT NULL,
   ADMIN_NAME           VARCHAR(50) NOT NULL,
   ADMIN_EMAIL          VARCHAR(30) NOT NULL,
   ADMIN_PHONE          VARCHAR(12),

   CONSTRAINT ADMIN_PK PRIMARY KEY(ADMIN_ID)
);

-- Student table
CREATE TABLE STUDENT
(
   STUDENT_ID             INT NOT NULL,
   STUDENT_NAME           VARCHAR(50)  NOT NULL,
   STUDENT_BIRTHDATE      DATE,
   STUDENT_COUNTRY        VARCHAR(15)  NOT NULL,
   STUDENT_EMAIL          VARCHAR(30),
   STUDENT_PHONE          VARCHAR(12),
   STUDENT_YEAR_ENROLLED  INT   NOT NULL,
   STUDENT_CGPA		      INT,
   STUDENT_MAJOR          VARCHAR(30),
   STUDENT_MINOR          VARCHAR(30),

   CONSTRAINT STUDENT_PK PRIMARY KEY(STUDENT_ID)
);

-- Student course table
CREATE TABLE STUDENT_COURSE
(
   STUDENT_ID       INT NOT NULL,
   COURSE_CODE      VARCHAR(6)    NOT NULL,
   COURSE_NAME      VARCHAR(50)   NOT NULL,
   COURSE_GRADE     VARCHAR(2),

   CONSTRAINT STUDENT_COURSE_PK PRIMARY KEY (STUDENT_ID, COURSE_CODE),
   CONSTRAINT STUDENT_SC_FK FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT (STUDENT_ID) ON DELETE CASCADE,
   CONSTRAINT STUDENT_COURSE_UQ UNIQUE (COURSE_NAME)
);


-- Company table
CREATE TABLE COMPANY
(
   COMPANY_ID             INT  NOT NULL,
   COMPANY_NAME			      VARCHAR(30)	  NOT NULL,
   COMPANY_EMAIL			    VARCHAR(30),
   COMPANY_PHONE			    VARCHAR(12),
   COMPANY_ADDRESS			    VARCHAR(50),
   COMPANY_INDUSTRY 			VARCHAR(50),
   COMPANY_ADMIN_NAME 	         VARCHAR(30)     	  NOT NULL,
   COMPANY_ADMIN_EMAIL			    VARCHAR(30),
   
   CONSTRAINT COMPANY_ID_PK PRIMARY KEY(COMPANY_ID)
);

--Job table
CREATE TABLE JOB
(
   JOB_ID             INT   NOT NULL,
   COMPANY_ID         INT   NOT NULL,
   JOB_CODE           VARCHAR(6) UNIQUE,
   JOB_NAME           VARCHAR(20),
   JOB_DESCRIPTION    VARCHAR(50),
   JOB_INDUSTRY	      VARCHAR(30),
   JOB_LOCATION       VARCHAR(50),
   JOB_SALARY         INT,
   CGPA_REQUIRED      INT,
   COURSE_REQUIRED    VARCHAR(50),

   CONSTRAINT JOB_PK PRIMARY KEY(JOB_ID),
   CONSTRAINT COMPANY_JOB_ID_UQ UNIQUE (COMPANY_ID, JOB_CODE),
   CONSTRAINT JOB_COMPANY_FK FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID) ON DELETE    CASCADE
);

-- Job listing table
CREATE TABLE JOB_LISTING
(
   JOB_ID             INT   NOT NULL,
   JOB_CODE           VARCHAR(6)       NOT NULL,
   JOB_NAME           VARCHAR(20)   NOT NULL,
   JOB_DESCRIPTION    VARCHAR(50),
   JOB_LOCATION       VARCHAR(50),
   JOB_SALARY         INT,
   COMPANY_NAME       VARCHAR(30)   NOT NULL,
   COMPANY_ADDRESS    VARCHAR(50),
   COMPANY_EMAIL      VARCHAR(30),
   COMPANY_PHONE      VARCHAR(12),
   COURSE_REQUIRED    VARCHAR(50)   NOT NULL,
   CGPA_REQUIRED      INT   NOT NULL,

   CONSTRAINT JOB_LISTING_PK PRIMARY KEY(JOB_ID),
);

ALTER TABLE JOB_LISTING
ADD COLUMN COMPANY_ID INT NOT NULL;

ALTER TABLE JOB_LISTING
ADD CONSTRAINT JOB_LISTING_COMPANY_FK 
FOREIGN KEY (COMPANY_ID)
REFERENCES COMPANY(COMPANY_ID);

ALTER TABLE JOB_LISTING
ADD CONSTRAINT JOB_LISTING_JOB_FK 
FOREIGN KEY (JOB_ID)
REFERENCES JOB(JOB_ID) ON DELETE CASCADE;

ALTER TABLE JOB_LISTING
ADD CONSTRAINT JOB_LISTING_COURSE_REQUIRED_FK 
FOREIGN KEY (COURSE_REQUIRED)
REFERENCES STUDENT_COURSE(COURSE_NAME);


-- Job application table
CREATE TABLE JOB_APPLICATION (
  APPLY_ID               INT   NOT NULL,
  STUDENT_ID             INT   NOT NULL,
  COMPANY_ID             INT   NOT NULL,
  DATE_APPLIED       DATE,
  STATUS                VARCHAR(50) DEFAULT 'pending',

  CONSTRAINT JOB_APP_PK PRIMARY KEY(APPLY_ID),
  CONSTRAINT JOB_APP_STUDENT_FK FOREIGN KEY (STUDENT_ID)
      REFERENCES STUDENT(STUDENT_ID),
  CONSTRAINT JOB_APP_COMPANY_FK FOREIGN KEY (COMPANY_ID)
      REFERENCES COMPANY(COMPANY_ID)
);

-- Favorite job table
CREATE TABLE FAVORITE_JOB
(
   STUDENT_ID             INT   NOT NULL,
   JOB_ID                 INT   NOT NULL,
   
   CONSTRAINT FAV_JOB_PK PRIMARY KEY(STUDENT_ID, JOB_ID),
   CONSTRAINT FAV_JOB_STUDENT_FK FOREIGN KEY (STUDENT_ID)
      REFERENCES STUDENT(STUDENT_ID),
   CONSTRAINT FAV_JOB_JOB_FK FOREIGN KEY (JOB_ID)
      REFERENCES JOB(JOB_ID)
);

-- Salary Comparison table
CREATE TABLE SALARY_COMPARISON
(
   STUDENT_ID             INT   NOT NULL,
   JOB_CODE               VARCHAR(6)       NOT NULL,
   SALARY                 INT  NOT NULL,

   CONSTRAINT SALARY_COMP_PK PRIMARY KEY(STUDENT_ID, JOB_CODE),
   CONSTRAINT SALARY_STUDENT_FK FOREIGN KEY (STUDENT_ID)
      REFERENCES STUDENT(STUDENT_ID)
);

ALTER TABLE SALARY_COMPARISON 
ADD CONSTRAINT SALARY_JOB_FK FOREIGN KEY (JOB_CODE)
      REFERENCES JOB(JOB_CODE);

-- Training table
CREATE TABLE TRAINING 
(
  TRAINING_ID 		INT   NOT NULL,
  TRAINING_NAME         VARCHAR(50) NOT NULL,
  TRAINING_DESCRIPTION  VARCHAR(255),
  START_DATE		DATE NOT NULL,
  END_DATE      	DATE NOT NULL,
  TRAINING_DURATIONS    VARCHAR(50),
  TRAINER_NAME		VARCHAR(30) NOT NULL,
  TRAINING_MODE		VARCHAR(20),


  CONSTRAINT TRAINING_PK PRIMARY KEY(TRAINING_ID)
);

ALTER TABLE TRAINING ADD UNIQUE (TRAINING_NAME);

-- Student training SUGGESTION table
CREATE TABLE TRAINING_SUGGESTION(
    TRAINING_ID 		INT  NOT NULL AUTO_INCREMENT,
    TRAINING_NAME         VARCHAR(50) NOT NULL,
    TRAINING_DESCRIPTION  VARCHAR(255),
    START_DATE		DATE NOT NULL,
    END_DATE      	DATE NOT NULL,
    TRAINING_DURATIONS    VARCHAR(50),
    TRAINER_NAME		VARCHAR(30) NOT NULL,
    TRAINING_MODE		VARCHAR(20),
    TRAINING_URL VARCHAR(255),
    
    CONSTRAINT TRAINING_SUGGEST_PK PRIMARY KEY(TRAINING_ID)
);

ALTER TABLE TRAINING_SUGGESTION ADD CONSTRAINT TRAINING_SUGGEST_FK
FOREIGN KEY (TRAINING_NAME) REFERENCES TRAINING (TRAINING_NAME);

